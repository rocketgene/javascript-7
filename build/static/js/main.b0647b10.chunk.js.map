{"version":3,"sources":["config.js","components/SearchForm.js","components/Photo.js","components/NotFound.js","components/PhotoContainer.js","components/Nav.js","components/PageNotFound.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","SearchForm","handleSubmit","e","preventDefault","path","query","value","props","searchedTerms","find","searchTerm","onSearchOldPhoto","history","push","onSearch","currentTarget","reset","className","onSubmit","this","type","onChange","onSearchChange","name","ref","input","placeholder","required","fill","height","viewBox","width","xmlns","d","Component","withRouter","Photo","src","url","alt","NotFound","PhotoContainer","photos","results","data","match","checkUrl","length","map","photo","server","id","secret","title","navName","Nav","to","PageNotFound","App","performSearch","setState","isLoading","axios","get","then","response","currentPhotos","prevState","searchedPhotos","catch","error","console","log","showCurrentPhotos","state","indexOf","term","seaPhotos","mountainPhotos","waterfallPhotos","allPhotos","exact","render","isNav","params","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0647b10.chunk.js","sourcesContent":["const apiKey = '3a8684e6b462da8130eea6eff732d8d2';\nexport default apiKey;\n","import React, { Component } from 'react';\nimport { useHistory, withRouter } from 'react-router-dom';\nclass SearchForm extends Component {\n    \n    handleSubmit = (e) => {\n        e.preventDefault();\n        \n        let path = `/search/${this.query.value}`;\n        \n        // callback functions for searched photos\n        if (this.props.searchedTerms.find(searchTerm => searchTerm === this.query.value)) {\n            // for previously searched photo\n\n            this.props.onSearchOldPhoto(this.query.value);\n            this.props.history.push(path);\n        } else {\n            // for newly searched photo\n\n            this.props.onSearch(this.query.value);\n            this.props.history.push(path);\n        }\n\n        e.currentTarget.reset();\n    }\n\n    render () {\n        return (\n            <div>\n                <form className=\"search-form\" onSubmit={this.handleSubmit}>\n                    <input type=\"search\" \n                        onChange={this.onSearchChange}\n                        name=\"search\" \n                        ref={ (input) => this.query = input }\n                        placeholder=\"Search\" \n                        required/>\n                    <button type=\"submit\" className=\"search-button\">\n                    <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                    </svg>\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\nexport default withRouter(SearchForm)\n","import React from 'react';\n\nconst Photo = props => {\n    return (\n        <li>\n            <img src={props.url} alt=\"\" />\n        </li>\n    );\n}\n  \nexport default Photo;\n  ","\nfunction NotFound() {\n    return (\n        <div className=\"not-found\">\n            <h3>No Results Found</h3>\n            <p>You search did not return any results. Please try again.</p>\n        </div>\n    )\n}\n\nexport default NotFound;","import Photo from './Photo';\nimport React from 'react';\nimport NotFound from './NotFound';\n\n  const PhotoContainer = (props) => {\n  \n      const results = props.data;\n\n      // callback function displays photos if it has been searched previously\n      if (props.match) {\n        props.checkUrl(props.match)\n      }\n      \n      // display photos or render the NotFound component if search returns no results\n      let photos;\n      if (results.length > 0) {\n        photos = results.map(photo => <Photo url={`https://live.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`} key={photo.id} />)\n      } else if (results.length = 0 && props.isNav === false) {\n        photos = <NotFound />\n      }\n\n      // saves title of nav\n      let title = props.navName;\n      \n      return(\n          <div className=\"photo-container\">\n              <h2>\n              {\n                (props.match)\n                ? props.match\n                : title\n              }\n              </h2>\n              <ul>\n                  {photos}\n              </ul>\n          </div>\n      ) \n  }\n  \nexport default PhotoContainer\n  \n  ","import { NavLink } from 'react-router-dom';\n\n\nfunction Nav() {\n    return (\n        <nav className=\"main-nav\">\n            <ul>\n                <li><NavLink to='/sea'>Sea</NavLink></li>\n                <li><NavLink to='/mountain'>Mountain</NavLink></li>\n                <li><NavLink to='/waterfall'>Waterfall</NavLink></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Nav;","\nfunction PageNotFound() {\n    return (\n        <div className=\"not-found\">\n            <h3>404: Page not found</h3>\n        </div>\n    )\n}\n\nexport default PageNotFound;","import apiKey from './config.js'\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect, Navlink, Router, matchPath } from 'react-router-dom';\nimport axios from 'axios';\n\n\n// Components\nimport SearchForm from './components/SearchForm';\nimport PhotoContainer from './components/PhotoContainer';\nimport Nav from './components/Nav';\nimport PageNotFound from './components/PageNotFound';\nexport default class App extends Component {\n\n  constructor () {\n    super();\n    this.state = {\n      seaPhotos: [],\n      mountainPhotos: [],\n      waterfallPhotos: [],\n      searchedPhotos: [],\n      searchedTerms: [],\n      currentPhotos: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    // fetches images for sea, mountain and waterfall when page loads\n    if (this.state.seaPhotos.length > 0 && this.state.mountainPhotos.length > 0 && this.state.waterfallPhotos.length > 0) {\n      return null\n    } else {\n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=sea&per_page=24&format=json&nojsoncallback=1`)\n      .then(response => this.setState({ \n        seaPhotos: response.data.photos.photo,\n        isLoading: false\n      }) )\n      .catch(error => console.log('Error fetching and parsing data', error) );\n      \n  \n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=mountain&per_page=24&format=json&nojsoncallback=1`)\n      .then(response => this.setState({ \n        mountainPhotos: response.data.photos.photo,\n        isLoading: false\n      }) )\n      .catch(error => console.log('Error fetching and parsing data', error) );\n  \n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=waterfall&per_page=24&format=json&nojsoncallback=1`)\n      .then(response => this.setState({ \n        waterfallPhotos: response.data.photos.photo,\n        isLoading: false \n      }) )\n      .catch(error => console.log('Error fetching and parsing data', error) );\n    }\n  }\n\n  // fetches request for a term not searched before\n  performSearch = (query) => {\n    this.setState({ isLoading: true });\n\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&format=json&nojsoncallback=1`)\n      .then(response => {\n        this.setState({ currentPhotos: response.data.photos.photo });\n        this.setState(prevState => ({ searchedPhotos: [...prevState.searchedPhotos, response.data.photos.photo] }));\n        this.setState(prevState => ({ searchedTerms: [...prevState.searchedTerms, query] }));\n        this.setState({ isLoading: false })\n      })\n      .catch(error => console.log('Error fetching and parsing data', error) );\n  }\n\n  // sets currentPhotos state to an array of photos of a previously searched term, stored in the searchedPhotos state\n  showCurrentPhotos = (searchTerm) => {\n    this.setState({ currentPhotos: this.state.searchedPhotos[this.state.searchedTerms.indexOf(searchTerm)] });\n  }\n\n  // displays previously searched photos upon browser navigation\n  checkUrl = (query) => {\n    if (this.state.searchedTerms.find(term => query === term) && this.state.currentPhotos !== this.state.searchedPhotos[this.state.searchedTerms.indexOf(query)]) {\n      this.setState({ currentPhotos: this.state.searchedPhotos[this.state.searchedTerms.indexOf(query)] });\n    }\n  }\n\n  \n\n  render () {\n        \n    return (\n        <BrowserRouter>\n          <div className=\"container\">\n            \n            <SearchForm onSearch={this.performSearch} onSearchOldPhoto={this.showCurrentPhotos} allPhotos={this.state.searchedPhotos} searchedTerms={this.state.searchedTerms}/>\n            <Nav />\n\n            <Switch>\n              <Route exact path=\"/\" render={ () => <Redirect to=\"/sea\" />} /> \n              <Route path=\"/sea\" render={ () => <PhotoContainer data={this.state.seaPhotos} isNav={true} navName={'sea'}/> } />              \n              <Route path=\"/mountain\" render={ () => <PhotoContainer data={this.state.mountainPhotos} isNav={true} navName={'mountain'}/>} />              \n              <Route path=\"/waterfall\" render={ () => <PhotoContainer data={this.state.waterfallPhotos} isNav={true} navName={'waterfall'}/>} />\n\n              {/* conditionally render a loading indicator for the search bar */}\n              { (this.state.isLoading) ? <p>Loading...</p> : <Route path=\"/search/:query\" render={ ({match}) => <PhotoContainer data={this.state.currentPhotos} match={match.params.query} checkUrl={this.checkUrl}/>} isNav={false}/> }   \n\n              <Route component={PageNotFound} />      \n            </Switch>\n          </div>\n        </BrowserRouter>\n\n\n    );\n  }\n  \n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}